// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RoleAnimationState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RoleAnimationState GetRootAsRoleAnimationState(ByteBuffer _bb) { return GetRootAsRoleAnimationState(_bb, new RoleAnimationState()); }
  public static RoleAnimationState GetRootAsRoleAnimationState(ByteBuffer _bb, RoleAnimationState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleAnimationState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Animation { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<MyFlatBuffer.RoleAnimationState> CreateRoleAnimationState(FlatBufferBuilder builder,
      uint animation = 0) {
    builder.StartTable(1);
    RoleAnimationState.AddAnimation(builder, animation);
    return RoleAnimationState.EndRoleAnimationState(builder);
  }

  public static void StartRoleAnimationState(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddAnimation(FlatBufferBuilder builder, uint animation) { builder.AddUint(0, animation, 0); }
  public static Offset<MyFlatBuffer.RoleAnimationState> EndRoleAnimationState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.RoleAnimationState>(o);
  }
};


}
