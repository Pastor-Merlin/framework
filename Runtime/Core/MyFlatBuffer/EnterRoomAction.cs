// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct EnterRoomAction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static EnterRoomAction GetRootAsEnterRoomAction(ByteBuffer _bb) { return GetRootAsEnterRoomAction(_bb, new EnterRoomAction()); }
  public static EnterRoomAction GetRootAsEnterRoomAction(ByteBuffer _bb, EnterRoomAction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EnterRoomAction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint RoomId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string Password { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPasswordBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPasswordArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<MyFlatBuffer.EnterRoomAction> CreateEnterRoomAction(FlatBufferBuilder builder,
      uint room_id = 0,
      StringOffset passwordOffset = default(StringOffset)) {
    builder.StartTable(2);
    EnterRoomAction.AddPassword(builder, passwordOffset);
    EnterRoomAction.AddRoomId(builder, room_id);
    return EnterRoomAction.EndEnterRoomAction(builder);
  }

  public static void StartEnterRoomAction(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRoomId(FlatBufferBuilder builder, uint roomId) { builder.AddUint(0, roomId, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(1, passwordOffset.Value, 0); }
  public static Offset<MyFlatBuffer.EnterRoomAction> EndEnterRoomAction(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.EnterRoomAction>(o);
  }
};


}
