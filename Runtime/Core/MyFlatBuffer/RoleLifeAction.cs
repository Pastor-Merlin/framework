// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RoleLifeAction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RoleLifeAction GetRootAsRoleLifeAction(ByteBuffer _bb) { return GetRootAsRoleLifeAction(_bb, new RoleLifeAction()); }
  public static RoleLifeAction GetRootAsRoleLifeAction(ByteBuffer _bb, RoleLifeAction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleLifeAction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MyFlatBuffer.RoleLifeState? State { get { int o = __p.__offset(4); return o != 0 ? (MyFlatBuffer.RoleLifeState?)(new MyFlatBuffer.RoleLifeState()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<MyFlatBuffer.RoleLifeAction> CreateRoleLifeAction(FlatBufferBuilder builder,
      Offset<MyFlatBuffer.RoleLifeState> stateOffset = default(Offset<MyFlatBuffer.RoleLifeState>)) {
    builder.StartTable(1);
    RoleLifeAction.AddState(builder, stateOffset);
    return RoleLifeAction.EndRoleLifeAction(builder);
  }

  public static void StartRoleLifeAction(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddState(FlatBufferBuilder builder, Offset<MyFlatBuffer.RoleLifeState> stateOffset) { builder.AddOffset(0, stateOffset.Value, 0); }
  public static Offset<MyFlatBuffer.RoleLifeAction> EndRoleLifeAction(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.RoleLifeAction>(o);
  }
};


}
