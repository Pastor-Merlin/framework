// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct GeneralScore : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static GeneralScore GetRootAsGeneralScore(ByteBuffer _bb) { return GetRootAsGeneralScore(_bb, new GeneralScore()); }
  public static GeneralScore GetRootAsGeneralScore(ByteBuffer _bb, GeneralScore obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GeneralScore __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint TasksCompletedNumber { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TasksAmountNumber { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string ActuallyDuration { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActuallyDurationBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetActuallyDurationBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetActuallyDurationArray() { return __p.__vector_as_array<byte>(8); }
  public string Grade { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGradeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetGradeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetGradeArray() { return __p.__vector_as_array<byte>(10); }
  public string RescueGrade { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRescueGradeBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetRescueGradeBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetRescueGradeArray() { return __p.__vector_as_array<byte>(12); }
  public string PropertyLossGrade { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPropertyLossGradeBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetPropertyLossGradeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetPropertyLossGradeArray() { return __p.__vector_as_array<byte>(14); }
  public string TimeConsumptionGrade { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimeConsumptionGradeBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetTimeConsumptionGradeBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetTimeConsumptionGradeArray() { return __p.__vector_as_array<byte>(16); }
  public string EventimpactGrade { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEventimpactGradeBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetEventimpactGradeBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetEventimpactGradeArray() { return __p.__vector_as_array<byte>(18); }
  public uint RescueScore { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint PropertyLossScore { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint TimeConsumptionScore { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint EventimpactScore { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<MyFlatBuffer.GeneralScore> CreateGeneralScore(FlatBufferBuilder builder,
      uint tasks_completed_number = 0,
      uint tasks_amount_number = 0,
      StringOffset actually_durationOffset = default(StringOffset),
      StringOffset gradeOffset = default(StringOffset),
      StringOffset rescue_gradeOffset = default(StringOffset),
      StringOffset property_loss_gradeOffset = default(StringOffset),
      StringOffset time_consumption_gradeOffset = default(StringOffset),
      StringOffset eventimpact_gradeOffset = default(StringOffset),
      uint rescue_score = 0,
      uint property_loss_score = 0,
      uint time_consumption_score = 0,
      uint eventimpact_score = 0) {
    builder.StartTable(12);
    GeneralScore.AddEventimpactScore(builder, eventimpact_score);
    GeneralScore.AddTimeConsumptionScore(builder, time_consumption_score);
    GeneralScore.AddPropertyLossScore(builder, property_loss_score);
    GeneralScore.AddRescueScore(builder, rescue_score);
    GeneralScore.AddEventimpactGrade(builder, eventimpact_gradeOffset);
    GeneralScore.AddTimeConsumptionGrade(builder, time_consumption_gradeOffset);
    GeneralScore.AddPropertyLossGrade(builder, property_loss_gradeOffset);
    GeneralScore.AddRescueGrade(builder, rescue_gradeOffset);
    GeneralScore.AddGrade(builder, gradeOffset);
    GeneralScore.AddActuallyDuration(builder, actually_durationOffset);
    GeneralScore.AddTasksAmountNumber(builder, tasks_amount_number);
    GeneralScore.AddTasksCompletedNumber(builder, tasks_completed_number);
    return GeneralScore.EndGeneralScore(builder);
  }

  public static void StartGeneralScore(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddTasksCompletedNumber(FlatBufferBuilder builder, uint tasksCompletedNumber) { builder.AddUint(0, tasksCompletedNumber, 0); }
  public static void AddTasksAmountNumber(FlatBufferBuilder builder, uint tasksAmountNumber) { builder.AddUint(1, tasksAmountNumber, 0); }
  public static void AddActuallyDuration(FlatBufferBuilder builder, StringOffset actuallyDurationOffset) { builder.AddOffset(2, actuallyDurationOffset.Value, 0); }
  public static void AddGrade(FlatBufferBuilder builder, StringOffset gradeOffset) { builder.AddOffset(3, gradeOffset.Value, 0); }
  public static void AddRescueGrade(FlatBufferBuilder builder, StringOffset rescueGradeOffset) { builder.AddOffset(4, rescueGradeOffset.Value, 0); }
  public static void AddPropertyLossGrade(FlatBufferBuilder builder, StringOffset propertyLossGradeOffset) { builder.AddOffset(5, propertyLossGradeOffset.Value, 0); }
  public static void AddTimeConsumptionGrade(FlatBufferBuilder builder, StringOffset timeConsumptionGradeOffset) { builder.AddOffset(6, timeConsumptionGradeOffset.Value, 0); }
  public static void AddEventimpactGrade(FlatBufferBuilder builder, StringOffset eventimpactGradeOffset) { builder.AddOffset(7, eventimpactGradeOffset.Value, 0); }
  public static void AddRescueScore(FlatBufferBuilder builder, uint rescueScore) { builder.AddUint(8, rescueScore, 0); }
  public static void AddPropertyLossScore(FlatBufferBuilder builder, uint propertyLossScore) { builder.AddUint(9, propertyLossScore, 0); }
  public static void AddTimeConsumptionScore(FlatBufferBuilder builder, uint timeConsumptionScore) { builder.AddUint(10, timeConsumptionScore, 0); }
  public static void AddEventimpactScore(FlatBufferBuilder builder, uint eventimpactScore) { builder.AddUint(11, eventimpactScore, 0); }
  public static Offset<MyFlatBuffer.GeneralScore> EndGeneralScore(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.GeneralScore>(o);
  }
};


}
