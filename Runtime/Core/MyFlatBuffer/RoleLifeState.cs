// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RoleLifeState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RoleLifeState GetRootAsRoleLifeState(ByteBuffer _bb) { return GetRootAsRoleLifeState(_bb, new RoleLifeState()); }
  public static RoleLifeState GetRootAsRoleLifeState(ByteBuffer _bb, RoleLifeState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleLifeState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Health { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public MyFlatBuffer.RoleLifeType State { get { int o = __p.__offset(6); return o != 0 ? (MyFlatBuffer.RoleLifeType)__p.bb.GetSbyte(o + __p.bb_pos) : MyFlatBuffer.RoleLifeType.HEALTH; } }

  public static Offset<MyFlatBuffer.RoleLifeState> CreateRoleLifeState(FlatBufferBuilder builder,
      float health = 0.0f,
      MyFlatBuffer.RoleLifeType state = MyFlatBuffer.RoleLifeType.HEALTH) {
    builder.StartTable(2);
    RoleLifeState.AddHealth(builder, health);
    RoleLifeState.AddState(builder, state);
    return RoleLifeState.EndRoleLifeState(builder);
  }

  public static void StartRoleLifeState(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddHealth(FlatBufferBuilder builder, float health) { builder.AddFloat(0, health, 0.0f); }
  public static void AddState(FlatBufferBuilder builder, MyFlatBuffer.RoleLifeType state) { builder.AddSbyte(1, (sbyte)state, 0); }
  public static Offset<MyFlatBuffer.RoleLifeState> EndRoleLifeState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.RoleLifeState>(o);
  }
};


}
