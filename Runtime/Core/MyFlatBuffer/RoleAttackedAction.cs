// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RoleAttackedAction : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RoleAttackedAction GetRootAsRoleAttackedAction(ByteBuffer _bb) { return GetRootAsRoleAttackedAction(_bb, new RoleAttackedAction()); }
  public static RoleAttackedAction GetRootAsRoleAttackedAction(ByteBuffer _bb, RoleAttackedAction obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleAttackedAction __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float AttackedHelth { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public MyFlatBuffer.RoleBodyPart AttackedPart { get { int o = __p.__offset(6); return o != 0 ? (MyFlatBuffer.RoleBodyPart)__p.bb.GetSbyte(o + __p.bb_pos) : MyFlatBuffer.RoleBodyPart.HEAD; } }

  public static Offset<MyFlatBuffer.RoleAttackedAction> CreateRoleAttackedAction(FlatBufferBuilder builder,
      float attacked_helth = 0.0f,
      MyFlatBuffer.RoleBodyPart attacked_part = MyFlatBuffer.RoleBodyPart.HEAD) {
    builder.StartTable(2);
    RoleAttackedAction.AddAttackedHelth(builder, attacked_helth);
    RoleAttackedAction.AddAttackedPart(builder, attacked_part);
    return RoleAttackedAction.EndRoleAttackedAction(builder);
  }

  public static void StartRoleAttackedAction(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddAttackedHelth(FlatBufferBuilder builder, float attackedHelth) { builder.AddFloat(0, attackedHelth, 0.0f); }
  public static void AddAttackedPart(FlatBufferBuilder builder, MyFlatBuffer.RoleBodyPart attackedPart) { builder.AddSbyte(1, (sbyte)attackedPart, 0); }
  public static Offset<MyFlatBuffer.RoleAttackedAction> EndRoleAttackedAction(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.RoleAttackedAction>(o);
  }
};


}
