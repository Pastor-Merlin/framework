// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RoleState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RoleState GetRootAsRoleState(ByteBuffer _bb) { return GetRootAsRoleState(_bb, new RoleState()); }
  public static RoleState GetRootAsRoleState(ByteBuffer _bb, RoleState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoleState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MyFlatBuffer.ClientType ClientType { get { int o = __p.__offset(6); return o != 0 ? (MyFlatBuffer.ClientType)__p.bb.GetSbyte(o + __p.bb_pos) : MyFlatBuffer.ClientType.PLAYER; } }
  public MyFlatBuffer.ParticipantRole RoleType { get { int o = __p.__offset(8); return o != 0 ? (MyFlatBuffer.ParticipantRole)__p.bb.GetSbyte(o + __p.bb_pos) : MyFlatBuffer.ParticipantRole.SWAT; } }

  public static Offset<MyFlatBuffer.RoleState> CreateRoleState(FlatBufferBuilder builder,
      uint id = 0,
      MyFlatBuffer.ClientType client_type = MyFlatBuffer.ClientType.PLAYER,
      MyFlatBuffer.ParticipantRole role_type = MyFlatBuffer.ParticipantRole.SWAT) {
    builder.StartTable(3);
    RoleState.AddId(builder, id);
    RoleState.AddRoleType(builder, role_type);
    RoleState.AddClientType(builder, client_type);
    return RoleState.EndRoleState(builder);
  }

  public static void StartRoleState(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
  public static void AddClientType(FlatBufferBuilder builder, MyFlatBuffer.ClientType clientType) { builder.AddSbyte(1, (sbyte)clientType, 0); }
  public static void AddRoleType(FlatBufferBuilder builder, MyFlatBuffer.ParticipantRole roleType) { builder.AddSbyte(2, (sbyte)roleType, 0); }
  public static Offset<MyFlatBuffer.RoleState> EndRoleState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyFlatBuffer.RoleState>(o);
  }
};


}
